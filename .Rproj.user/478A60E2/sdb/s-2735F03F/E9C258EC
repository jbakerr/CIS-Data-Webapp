{
    "collab_server" : "",
    "contents" : "source(\"tier1.r\", local = T)\nsource(\"site_coordination.r\", local = T)\nsource('services.r', local= T)\nsource('caselist.r', local = T)\nsource('progress_monitoring.r', local = T)\nsource('studentlist.r', local = T)\nsource('service_prep.r', local = T)\nlibrary(plyr) # ****IMPORTANT**** Load plyr before dplyr- they have some of the same named functions, and if you load in a different order it will cause problems\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(XLConnect)\nlibrary(lubridate)\nlibrary(shiny)\n\n\nserver <- function(input, output) {\n  \n  getData_caselist <- reactive({\n    caselist <- input$caselist\n    \n    if(is.null(caselist))\n      return(NULL)\n    \n    caselist <- readWorksheetFromFile(caselist$datapath, sheet = 1, header = T, startRow = 2)\n    caselist <- caselist_script(caselist)\n    return(caselist)\n\n  })\n  \n  \n  getData_progress <- reactive({\n    \n    progress <- input$progress\n    \n    if(is.null(progress))\n      return(NULL)\n    \n    \n    progress <-readWorksheetFromFile(progress$datapath, sheet = 1, header = T, startRow = 1)\n    progress <- progress_import_script(progress)\n    \n    return(progress)\n    \n    \n  })\n  \n  getData_services <- reactive({\n    \n    services <- input$services\n    \n    if(is.null(services))\n      return(NULL)\n    \n    services <- readWorksheetFromFile(services$datapath, sheet = 1, header = T, startRow = 2)\n    \n    services <- service_script(services)\n    return(services)\n    \n    \n  })\n  \n  \n  \n  \n  getData_tier1 <- reactive({\n    \n    tier1 <- input$tier1\n\n    if (is.null(input$tier1))\n      return(NULL)\n\n    \n    tier1_df <- readWorksheetFromFile(tier1$datapath, sheet=1, header = T, startRow = 2)\n    return(tier1_df)\n    \n    tier1_df <- tier1_script(tier1_df)\n    \n  \n    \n  })\n  \n  \n  getData_site_coordination <- reactive({\n    \n    site_coordination <- input$site_coordination\n  \n    if (is.null(input$site_coordination))\n      return(NULL)\n    \n\n    \n    site_coordination_df <- readWorksheetFromFile(site_coordination$datapath, sheet=1, header = T, startRow = 1)\n    site_coordination_df <- site_coordination_script(site_coordination_df)\n    \n    \n    \n    return(site_coordination_df)\n    \n  })\n  \n  studentlist_creation <- function(caselist, progress, data){\n    \n    studentlist <-merge(caselist, progress, by = \"Student.ID\", all = T)\n\n    stserv <- prep_service_file(data)\n    \n    stlist <- merge(studentlist, stserv, by = \"Student.ID\", all = T)\n    \n    studentlist <- studentlist_script(stlist)\n    \n    \n    return(studentlist)\n    \n  }\n  \n  \n  output$contents <- renderTable(\n    \n    getData_tier1()\n    \n  )\n  \n  output$download_tier1 <- downloadHandler(\n    filename = function() {\n      paste(\"tier1\", \".csv\", sep = \"\")\n    },\n    content = function(file) {\n      write.csv(getData_tier1(), file, row.names = FALSE)\n    }\n  )\n  \n  output$download_site_coordination <- downloadHandler(\n    filename = function() {\n      paste(\"site_coordination\", \".csv\", sep = \"\")\n    },\n    content = function(file) {\n      write.csv(getData_site_coordination(), file, row.names = FALSE)\n    }\n  )\n  \n  output$download_services <- downloadHandler(\n    filename = function() {\n      paste(\"services\", \".csv\", sep = \"\")\n    },\n    content = function(file) {\n      write.csv(getData_services(), file, row.names = FALSE)\n    }\n  )\n  \n  output$download_studentlist <- downloadHandler(\n    filename = function() {\n      paste(\"studentlist\", \".csv\", sep = \"\")\n    },\n    content = function(file) {\n      write.csv(studentlist_creation(getData_caselist(), getData_progress(), getData_services()), file, row.names = FALSE)\n    }\n  )\n  \n  \n}",
    "created" : 1527990944760.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2712357431",
    "id" : "E9C258EC",
    "lastKnownWriteTime" : 1530825433,
    "last_content_update" : 1530825433018,
    "path" : "~/Code/CIS2017-18/cis_webapp/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}